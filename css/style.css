* {
  list-style: none;
}

/* Con grid podemos crear un layout de columnas y otras funcionalidades más */
/* Más info en el siguiente enlace => https://www.w3schools.com/css/css_grid.asp*/
.grid-container {
  display: grid;
  grid-template-columns: 1fr 3fr;
  margin: 5vh 8vw;
}

/* Con flex podemos determinar cómo se acomodan los elementos internos a un contenedor */
/* Más info en el siguiente enlace => https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_flexible_box_layout/Basic_concepts_of_flexbox */
.flex-container {
  display: flex;
  /* Establecer la propiedad en "wrap" permite que los elementos pasen para abajo si desbordan el tamaño del contenedor */
  flex-wrap: wrap;
  gap: 10px;
}

/* CSS para generar cada cuadrado */
.square {
  display: flex;
  flex-grow: 1;
  flex-basis: 200;
  /* justify-content y align-items nos permiten centrar el contenido interno usando flex */
  align-items: center;
  justify-content: center;
  height: auto;
  width: 200px;
  padding: 1rem;
}

/* Con media queries podemos cambiar totalmente el diseño de nuestro sitio en función del tamaño de la pantalla */
/* Más info de media queries en el siguiente enlace => https://www.w3schools.com/css/css3_mediaqueries.asp*/
@media only screen and (max-width: 768px) {
  .grid-container {
    grid-template-columns: 1fr;
  }
}

h1 {
  text-align: center;
}

.headerText {
  margin: 10vh 0;
}

.carousel {
  width: 50%;
  margin: auto;
}

.carousel h4 {
  text-align: center;
}

.menuItem {
  padding: 2vh;
  margin: 0 1vw 0 1vw;
  color: black !important;
}

.navbar {
  background-color: rgb(108, 117, 125);
}

.navbar a {
  color: white;
}

.link-color {
  color: white !important;
}

.disabled {
  color: rgb(162, 167, 172) !important;
}

.dropdown-item {
  color: black !important;
}